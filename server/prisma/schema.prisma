generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model JeuxMarque {
  JeuRef_id Int     @id
  Nom       String
  Editeur   String
  Description String
  jeuxDepot Jeu[]   @relation("JeuxMarque_Jeu")
}

model Jeu {
  JeuID         Int         @id @default(autoincrement())
  JeuRef_id     Int
  depot_ID      Int
  prix_unitaire Float
  mise_en_vente Boolean
  quantite_disponible Int  
  depot         Depot       @relation(fields: [depot_ID], references: [ID_depot])
  jeuxMarque    JeuxMarque? @relation("JeuxMarque_Jeu", fields: [JeuRef_id], references: [JeuRef_id])
  achat_jeux    AchatJeu[]
  depot_jeux    DepotJeu[]
}

model Depot {
  ID_depot              Int        @id @default(autoincrement())
  VendeurID             Int
  date_depot            DateTime
  id_session            Int
  comission_depot_total Float
  vendeur               Vendeur    @relation(fields: [VendeurID], references: [VendeurID])
  session               Session    @relation(fields: [id_session], references: [idSession])
  jeux                  Jeu[]
  depot_jeux            DepotJeu[]
}

model Vendeur {
  VendeurID Int     @id @default(autoincrement())
  Nom       String
  Email     String
  Telephone String
  depots    Depot[]

  BilanVendeurSession BilanVendeurSession[]
}

model DepotJeu {
  depot_ID        Int
  JeuID           Int
  quantite_depose Int
  comission_depot Float
  depot           Depot @relation(fields: [depot_ID], references: [ID_depot])
  jeu             Jeu   @relation(fields: [JeuID], references: [JeuID])

  @@id([depot_ID, JeuID])
}

model Achat {
  AchatID               Int         @id @default(autoincrement())
  Total_paye            Float       // Montant total payé pour l'achat
  id_session            Int         // Référence à la session active
  DateAchat             DateTime    // Date et heure de l'achat
  comission_vente_total Float       // Total des commissions sur les jeux achetés
  session               Session     @relation(fields: [id_session], references: [idSession])
  achat_jeux            AchatJeu[]  // Relation avec les jeux achetés

  @@index([id_session]) // Index pour améliorer la recherche des achats par session
}


model AchatJeu {
  AchatID           Int
  JeuID             Int
  comission_vente   Float
  quantite_achete   Int
  achat             Achat @relation(fields: [AchatID], references: [AchatID])
  jeu               Jeu   @relation(fields: [JeuID], references: [JeuID])

  @@id([AchatID, JeuID])
}


model Session {
  idSession      Int      @id @default(autoincrement())
  NomSession     String
  DateDebut      DateTime
  DateFin        DateTime?
  pourc_frais_depot Float
  pourc_frais_vente Float
  Statut         Boolean
  achats         Achat[]
  depots         Depot[]
  bilanVendeurSessions BilanVendeurSession[]
}

model Utilisateur {
  UtilisateurID Int      @id @default(autoincrement())
  Nom           String
  Prenom        String
  Email         String   @unique
  MdP           String
  Role          Role
}

enum Role {
  Manager
  Admin
}

model BilanVendeurSession {
  id_vendeur     Int
  id_session     Int
  total_depots   Int
  total_ventes   Int
  total_stocks   Int
  total_gains    Float
  total_comissions Float
  vendeur        Vendeur @relation(fields: [id_vendeur], references: [VendeurID])
  session        Session @relation(fields: [id_session], references: [idSession])

  @@id([id_vendeur, id_session])
}
